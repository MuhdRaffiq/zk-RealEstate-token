{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xedc1d46f66898d8ae33a7e16244579d680a25554936a5e72f59f535d0a8b5dfe\",\"urls\":[\"bzz-raw://75767fdcb9c070eba4fc6928c32e528b59a01dfbf6c2a9e7cc2e6eb41aa7fdb3\",\"dweb:/ipfs/QmSTw8hVMozyrJjxN49c7tCHfAxKRPQbzNHdS22TK4VUyp\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75\",\"urls\":[\"bzz-raw://781a662595af8ecda052135a27529293189c1cdf40bc5e2934a62b3bc2b327ea\",\"dweb:/ipfs/QmNaGn5PyRCu3tfBu6mMwx3j2BHJiXWKiYGHSAu3au6P7S\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202410de619a43ef63762d0c8045542f662847c930ec0ed775906e9ed585f5de0b64736f6c63430005100032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202410de619a43ef63762d0c8045542f662847c930ec0ed775906e9ed585f5de0b64736f6c63430005100032",
  "sourceMap": "644:870:4:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "644:870:4:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}\r\n",
  "sourcePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        7523
      ]
    },
    "id": 7524,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 7477,
        "nodeType": "ImportDirective",
        "scope": 7524,
        "sourceUnit": 7711,
        "src": "27:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 7523,
        "linearizedBaseContracts": [
          7523
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7480,
            "libraryName": {
              "contractScope": null,
              "id": 7478,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7710,
              "src": "674:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7710",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "668:27:4",
            "typeName": {
              "id": 7479,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 7483,
            "members": [
              {
                "constant": false,
                "id": 7482,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 7483,
                "src": "1046:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7481,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1046:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 7523,
            "src": "703:379:4",
            "visibility": "public"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "1164:40:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7490,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7485,
                      "src": "1182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7482,
                    "src": "1182:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7489,
                  "id": 7492,
                  "nodeType": "Return",
                  "src": "1175:21:4"
                }
              ]
            },
            "documentation": null,
            "id": 7494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7485,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "1107:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7484,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7483,
                    "src": "1107:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:25:4"
            },
            "returnParameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "1155:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:9:4"
            },
            "scope": 7523,
            "src": "1090:114:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7505,
              "nodeType": "Block",
              "src": "1265:128:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7499,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "1366:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 7501,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7482,
                      "src": "1366:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1366:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7504,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:19:4"
                }
              ]
            },
            "documentation": null,
            "id": 7506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7496,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "1231:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7495,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7483,
                    "src": "1231:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1230:25:4"
            },
            "returnParameters": {
              "id": 7498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:4"
            },
            "scope": 7523,
            "src": "1212:181:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7521,
              "nodeType": "Block",
              "src": "1454:57:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7511,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "1465:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 7513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7482,
                      "src": "1465:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7514,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7508,
                            "src": "1482:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 7515,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7482,
                          "src": "1482:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7566,
                        "src": "1482:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1482:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7520,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:38:4"
                }
              ]
            },
            "documentation": null,
            "id": 7522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7508,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 7522,
                  "src": "1420:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7507,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7483,
                    "src": "1420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$7483_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:25:4"
            },
            "returnParameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:0:4"
            },
            "scope": 7523,
            "src": "1401:110:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7524,
        "src": "644:870:4"
      }
    ],
    "src": "0:1516:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
      "exportedSymbols": {
        "Counters": [
          7523
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 7476,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 7711,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "../math/SafeMath.sol",
          "scope": 7524,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7477,
        "name": "ImportDirective",
        "src": "27:30:4"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7523
          ],
          "name": "Counters",
          "scope": 7524
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 7710,
                  "type": "library SafeMath"
                },
                "id": 7478,
                "name": "UserDefinedTypeName",
                "src": "674:8:4"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7479,
                "name": "ElementaryTypeName",
                "src": "687:7:4"
              }
            ],
            "id": 7480,
            "name": "UsingForDirective",
            "src": "668:27:4"
          },
          {
            "attributes": {
              "canonicalName": "Counters.Counter",
              "name": "Counter",
              "scope": 7523,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_value",
                  "scope": 7483,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7481,
                    "name": "ElementaryTypeName",
                    "src": "1046:7:4"
                  }
                ],
                "id": 7482,
                "name": "VariableDeclaration",
                "src": "1046:14:4"
              }
            ],
            "id": 7483,
            "name": "StructDefinition",
            "src": "703:379:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "current",
              "scope": 7523,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 7494,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 7483,
                          "type": "struct Counters.Counter"
                        },
                        "id": 7484,
                        "name": "UserDefinedTypeName",
                        "src": "1107:7:4"
                      }
                    ],
                    "id": 7485,
                    "name": "VariableDeclaration",
                    "src": "1107:23:4"
                  }
                ],
                "id": 7486,
                "name": "ParameterList",
                "src": "1106:25:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7487,
                        "name": "ElementaryTypeName",
                        "src": "1155:7:4"
                      }
                    ],
                    "id": 7488,
                    "name": "VariableDeclaration",
                    "src": "1155:7:4"
                  }
                ],
                "id": 7489,
                "name": "ParameterList",
                "src": "1154:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 7489
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "_value",
                          "referencedDeclaration": 7482,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7485,
                              "type": "struct Counters.Counter storage pointer",
                              "value": "counter"
                            },
                            "id": 7490,
                            "name": "Identifier",
                            "src": "1182:7:4"
                          }
                        ],
                        "id": 7491,
                        "name": "MemberAccess",
                        "src": "1182:14:4"
                      }
                    ],
                    "id": 7492,
                    "name": "Return",
                    "src": "1175:21:4"
                  }
                ],
                "id": 7493,
                "name": "Block",
                "src": "1164:40:4"
              }
            ],
            "id": 7494,
            "name": "FunctionDefinition",
            "src": "1090:114:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "increment",
              "scope": 7523,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 7506,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 7483,
                          "type": "struct Counters.Counter"
                        },
                        "id": 7495,
                        "name": "UserDefinedTypeName",
                        "src": "1231:7:4"
                      }
                    ],
                    "id": 7496,
                    "name": "VariableDeclaration",
                    "src": "1231:23:4"
                  }
                ],
                "id": 7497,
                "name": "ParameterList",
                "src": "1230:25:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7498,
                "name": "ParameterList",
                "src": "1265:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 7482,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7496,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 7499,
                                "name": "Identifier",
                                "src": "1366:7:4"
                              }
                            ],
                            "id": 7501,
                            "name": "MemberAccess",
                            "src": "1366:14:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 7502,
                            "name": "Literal",
                            "src": "1384:1:4"
                          }
                        ],
                        "id": 7503,
                        "name": "Assignment",
                        "src": "1366:19:4"
                      }
                    ],
                    "id": 7504,
                    "name": "ExpressionStatement",
                    "src": "1366:19:4"
                  }
                ],
                "id": 7505,
                "name": "Block",
                "src": "1265:128:4"
              }
            ],
            "id": 7506,
            "name": "FunctionDefinition",
            "src": "1212:181:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "decrement",
              "scope": 7523,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 7522,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 7483,
                          "type": "struct Counters.Counter"
                        },
                        "id": 7507,
                        "name": "UserDefinedTypeName",
                        "src": "1420:7:4"
                      }
                    ],
                    "id": 7508,
                    "name": "VariableDeclaration",
                    "src": "1420:23:4"
                  }
                ],
                "id": 7509,
                "name": "ParameterList",
                "src": "1419:25:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7510,
                "name": "ParameterList",
                "src": "1454:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 7482,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7508,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 7511,
                                "name": "Identifier",
                                "src": "1465:7:4"
                              }
                            ],
                            "id": 7513,
                            "name": "MemberAccess",
                            "src": "1465:14:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 7566,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_value",
                                      "referencedDeclaration": 7482,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7508,
                                          "type": "struct Counters.Counter storage pointer",
                                          "value": "counter"
                                        },
                                        "id": 7514,
                                        "name": "Identifier",
                                        "src": "1482:7:4"
                                      }
                                    ],
                                    "id": 7515,
                                    "name": "MemberAccess",
                                    "src": "1482:14:4"
                                  }
                                ],
                                "id": 7516,
                                "name": "MemberAccess",
                                "src": "1482:18:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 7517,
                                "name": "Literal",
                                "src": "1501:1:4"
                              }
                            ],
                            "id": 7518,
                            "name": "FunctionCall",
                            "src": "1482:21:4"
                          }
                        ],
                        "id": 7519,
                        "name": "Assignment",
                        "src": "1465:38:4"
                      }
                    ],
                    "id": 7520,
                    "name": "ExpressionStatement",
                    "src": "1465:38:4"
                  }
                ],
                "id": 7521,
                "name": "Block",
                "src": "1454:57:4"
              }
            ],
            "id": 7522,
            "name": "FunctionDefinition",
            "src": "1401:110:4"
          }
        ],
        "id": 7523,
        "name": "ContractDefinition",
        "src": "644:870:4"
      }
    ],
    "id": 7524,
    "name": "SourceUnit",
    "src": "0:1516:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-09T05:51:42.187Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}